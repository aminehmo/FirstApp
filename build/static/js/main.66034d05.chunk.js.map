{"version":3,"sources":["Components/Comp2.js","Components/Comp1.js","Components/Comp3.js","Components/Comp4.js","App.js","serviceWorker.js","index.js"],"names":["Comp2","state","List","this","props","data","map","item","index","status","ExpansionPanel","expanded","expand","ExpansionPanelSummary","expandIcon","onClick","aria-controls","id","Avatar","alt","src","Image","Typography","SenderName","Button","deleteEmail","style","marginRight","importants","ExpansionPanelDetails","marginLeft","component","variant","color","Mesg","React","Component","Comp1","textAlign","background","ListItem","alignItems","key","ListItemAvatar","ListItemText","primary","secondary","Comp3","restoreEmail","Comp4","App","selectedPage","styleA","height","display","emailData","open","handleDelete","Index","temp","setState","handleImportant","handleExpand","handleRestore","handleChanges","text","CssBaseline","AppBar","Toolbar","IconButton","aria-label","handleDrawer","edge","noWrap","Drawer","anchor","Divider","button","ListItemIcon","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.66034d05.chunk.js","sourcesContent":["import React from \"react\";\n// import \"./App.css\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport List from \"@material-ui/core/List\";\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nimport Button from \"@material-ui/core/Button\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nexport default class Comp2 extends React.Component {\n  state = {};\n  // INBOX PAGE\n  render() {\n    return (\n      <List>\n        {this.props.data.map((item, index) =>\n          item.status === \"Inbox\" ? (\n            <ExpansionPanel expanded={item.expand}>\n              <ExpansionPanelSummary\n                expandIcon={\n                  <ExpandMoreIcon onClick={() => this.props.expand(index)} />\n                }\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Avatar alt=\"Remy Sharp\" src={`./images/${item.Image}`} />\n                <Typography> {item.SenderName} </Typography>\n                <Button onClick={() => this.props.deleteEmail(index)}>\n                  <DeleteIcon />\n                </Button>\n                <div>\n                  <Button\n                    style={{ marginRight: 990 }}\n                    onClick={() => this.props.importants(index)}\n                  >\n                    {\" \"}\n                    <FavoriteBorderIcon />\n                  </Button>\n                </div>\n              </ExpansionPanelSummary>\n\n              <ExpansionPanelDetails>\n                <Typography\n                  style={{ marginLeft: 80 }}\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  {item.Mesg}\n                </Typography>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          ) : null\n        )}\n      </List>\n    );\n  }\n}\n{\n  /* <List>\n              {this.props.data.map((item, index) => {\n                if (item.status === \"Inbox\") {\n                  return (\n                    <div style={{ background: \"lightgray\" }}>\n                      <ListItem alignItems=\"flex-start\" key={index}>\n                        <ListItemAvatar>\n                          <Avatar\n                            alt=\"Remy Sharp\"\n                            src={`./images/${item.Image}`}\n                          />\n                        </ListItemAvatar>\n                        \n                        <ListItemText\n                          primary={`${item.SenderName} `}\n                          secondary={\n                            <Typography\n                              style={{ marginLeft: 80 }}\n                              component=\"span\"\n                              // variant=\"body2\"\n                              color=\"textPrimary\"\n                            >\n                              {`${item.Mesg}`}\n                            </Typography>\n                          }\n                        />\n                        <hr />\n\n                        <Button onClick={() => this.props.deleteEmail(index)}>\n                          <DeleteIcon />\n                        </Button>\n                        <Button\n                          style={{ marginRight: 990 }}\n                          onClick={() => this.props.importants(index)}\n                        >\n                          <FavoriteBorderIcon />\n                        </Button>\n                      </ListItem>\n                      <hr />\n                    </div>\n                  );\n                }\n              })}\n            </List> */\n}\n","import React from \"react\";\n// import \"./App.css\";\nimport List from \"@material-ui/core/List\";\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport Button from '@material-ui/core/Button';\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\n\nexport default class Comp1 extends React.Component {\n  state = {\n\n  };\n  //important PAGE\n  render() {\n    return (\n      <div>\n        <List>\n          {this.props.data.map((item, index) => {\n            if (item.status === \"Important\") {\n              return (\n                <div style={{ textAlign: \"center\",background: \"lightgray\"  }}>\n                  <ListItem alignItems=\"flex-start\" key={index}>\n                    <ListItemAvatar>\n                      <Avatar  alt=\"Remy Sharp\" src={`./images/${item.Image}`} />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={`${item.SenderName} `}\n                      secondary={   \n                          <Typography style={{ marginLeft: 80 }}\n                            component=\"span\"\n                            // variant=\"body2\"\n                            color=\"textPrimary\"\n                          >\n                            {`${item.Mesg}`}\n                          </Typography>}\n                    /> <hr />\n                    <Button style={{ marginRight: 990 }} onClick={() => this.props.deleteEmail(index)}>\n                      <DeleteIcon />\n                    </Button>\n                  </ListItem>\n                  <hr />\n                </div>\n              );\n            }\n          })}\n        </List>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n// import \"./App.css\";\nimport List from \"@material-ui/core/List\";\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nimport Button from '@material-ui/core/Button';\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\n\nexport default class Comp3 extends React.Component {\n  state = {\n  };\n//TRASH PAGE\n  render() {\n    return (\n      <div>\n        <List>\n          {this.props.data.map((item, index) => {\n            if (item.status === \"Trash\") {\n              return (\n                <div style={{ background: \"lightgray\" }}>\n                  <ListItem alignItems=\"flex-start\" key={index}>\n                    <ListItemAvatar>\n                      <Avatar alt=\"Remy Sharp\" src={`./images/${item.Image}`} />\n                    </ListItemAvatar>\n                    <ListItemText\n                     primary= {`${item.SenderName} `}\n                      secondary={\n\n                          <Typography style={{ marginLeft: 80 }}\n                            component=\"span\"\n                            // variant=\"body2\"\n                            color=\"textPrimary\"\n                          >\n                            {`${item.Mesg}`}\n\n                          </Typography>\n                          \n                      }\n                    /><hr />\n                    <Button style={{ marginRight: 990 }} onClick={() => this.props.restoreEmail(index)}>\n                      <RestoreIcon />\n                    </Button>\n                  </ListItem>\n                  <hr />\n                </div>\n              );\n            }\n          })}\n        </List>\n       \n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { List } from \"@material-ui/core\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nimport Button from \"@material-ui/core/Button\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n// import \"./App.css\";\nexport default class Comp4 extends React.Component {\n  state = {};\n  //SPAM PAGE\n  render() {\n    return (\n      <List>\n          {this.props.data.map((item, index) => \n            item.status === \"Inbox\" ? (\n                <ExpansionPanel>\n                  <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\">\n                    <Avatar alt=\"Remy Sharp\" src={`./images/${item.Image}`} />\n                    <Typography> {item.SenderName} </Typography>\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                    <Typography\n                      style={{ marginLeft: 80 }}\n                      component=\"span\"\n                      variant=\"body2\"\n                      color=\"textPrimary\">\n                      {item.Mesg}\n                    </Typography>\n                    <Button onClick={() => this.props.deleteEmail(index)}>\n                      <DeleteIcon />\n                    </Button>\n                    <Button\n                      style={{ marginRight: 990 }}\n                      onClick={() => this.props.importants(index)}>\n                      <FavoriteBorderIcon />\n                    </Button>\n                  </ExpansionPanelDetails>\n                </ExpansionPanel>\n              ):(\n                null))\n            }\n                  </List>\n          )}}\n\n","import React from \"react\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Comp2 from \"./Components/Comp2\";\nimport Comp1 from \"./Components/Comp1\";\nimport Comp3 from \"./Components/Comp3\";\nimport Comp4 from \"./Components/Comp4\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n  state = {\n    selectedPage: \"Inbox\",\n    status: true,\n    styleA: { height: 60, marginLeft: 100, display: \"flex\" },\n    emailData: [\n      {\n        SenderName: \"Henry\",\n        Mesg: \"This is an important msg\",\n        Image: \"ahmed.png\",\n        status: \"Inbox\",\n        expand: false\n      },\n      {\n        SenderName: \"Mohammad\",\n        Mesg: \"meet me at landmark at 8pm tonight \",\n        Image: \"george.png\",\n        status: \"Inbox\",\n        expand: false\n      },\n      {\n        SenderName: \"Gillian\",\n        Mesg: \"i will not attend today \",\n        Image: \"gillian.png\",\n        status: \"Inbox\",\n        expand: false\n      },\n      {\n        SenderName: \"Hania\",\n        Mesg: \"hello how are you today?\",\n        Image: \"hania.png\",\n        status: \"Inbox\",\n        expand: false\n      },\n      {\n        SenderName: \"Mariam\",\n        Mesg: \"can you send me my files\",\n        Image: \"mariam.png\",\n        status: \"Inbox\",\n        expand: false\n      },\n      {\n        SenderName: \"Robert\",\n        Mesg: \"how is everything ?\",\n        Image: \"robert.png\",\n        status: \"Inbox\",\n        expand: false\n      }\n    ],\n    open: false\n  };\n  handleDelete = Index => {\n    const temp = this.state.emailData;\n    temp[Index].status = \"Trash\";\n    this.setState({ emailData: temp });\n  };\n  handleImportant = Index => {\n    const temp = this.state.emailData;\n    temp[Index].status = \"Important\";\n  };\n  handleExpand = Index => {\n    let temp = this.state.emailData;\n    temp[Index].expand = !temp[Index].expand;\n    this.setState({ emailData: temp });\n  };\n\n  handleRestore = Index => {\n    const temp = this.state.emailData;\n    temp[Index].status = \"Inbox\";\n    this.setState({ emailData: temp });\n  };\n\n  handleChanges = text => {\n    this.setState({ selectedPage: text });\n  };\n\n  // handleDrawer = () => {\n  //   this.setState({ status: !this.state.status });\n  // };\n\n  // handleOpen = () => {\n  //   this.setState({ open: !this.state.open });\n  // };\n\n  render() {\n    return (\n      <div>\n        <h1>HELLO</h1>\n        <CssBaseline />\n        <AppBar>\n          <div style={this.state.styleA}>\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={this.handleDrawer}\n                edge=\"start\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" noWrap>\n                Persistent drawer\n              </Typography>\n            </Toolbar>\n          </div>\n        </AppBar>\n        <nav style={{ marginLeft: 300 }} aria-label=\"mailbox folders\">\n          <div>\n            <Drawer variant=\"persistent\" anchor=\"left\" open={this.state.status}>\n              <div />\n              <div style={{ textAlign: \"center\", color: \"black\" }}>\n                <IconButton>\n                  <Typography style={{ textAlign: \"center\", color: \"black\" }}>\n                    <strong>CP3170</strong>\n                  </Typography>\n                </IconButton>\n              </div>\n              <Divider />\n              <List style={{ height: 150, background: \"gray\" }}>\n                {[\"Inbox\", \"Trash\", \"Important\", \"Spam\"].map(text => (\n                  <ListItem\n                    style={{ background: \"gray\" }}\n                    button\n                    key={text}\n                    onClick={() => this.handleChanges(text)}\n                  >\n                    <ListItemIcon>\n                      {text === \"Inbox\" ? (\n                        <InboxIcon />\n                      ) : text === \"Trash\" ? (\n                        <DeleteSweepIcon />\n                      ) : text === \"Important\" ? (\n                        <StarIcon />\n                      ) : text === \"Spam\" ? (\n                        <MailOutlineIcon />\n                      ) : (\n                        <MailOutlineIcon />\n                      )}\n                    </ListItemIcon>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                ))}\n              </List>\n            </Drawer>\n          </div>\n          <Divider />\n        </nav>\n        <main style={{ marginLeft: 160 }}>\n          <div style={{ marginTop: 80 }} />\n          {this.state.selectedPage === \"Inbox\" ? (\n            <Comp2\n              data={this.state.emailData}\n              deleteEmail={this.handleDelete}\n              importants={this.handleImportant}\n              expand={this.handleExpand}\n            />\n          ) : this.state.selectedPage === \"Trash\" ? (\n            <Comp3\n              data={this.state.emailData}\n              restoreEmail={this.handleRestore}\n            />\n          ) : this.state.selectedPage === \"Important\" ? (\n            <Comp1\n              data={this.state.emailData}\n              deleteEmail={this.handleDelete}\n            />\n          ) : this.state.selectedPage === \"Spam\" ? (\n            <Comp4 data={this.state.emailData} />\n          ) : null}\n        </main>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}